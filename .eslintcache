[{"C:\\Users\\plazi\\Desktop\\Programowanie\\co na obiad\\co-na-obiad-app\\src\\index.js":"1","C:\\Users\\plazi\\Desktop\\Programowanie\\co na obiad\\co-na-obiad-app\\src\\reportWebVitals.js":"2","C:\\Users\\plazi\\Desktop\\Programowanie\\co na obiad\\co-na-obiad-app\\src\\pages\\App.js":"3","C:\\Users\\plazi\\Desktop\\Programowanie\\co na obiad\\co-na-obiad-app\\src\\pages\\DrawnDishList.js":"4","C:\\Users\\plazi\\Desktop\\Programowanie\\co na obiad\\co-na-obiad-app\\src\\pages\\FileterArr.js":"5","C:\\Users\\plazi\\Desktop\\Programowanie\\co na obiad\\co-na-obiad-app\\src\\components\\Filter.js":"6","C:\\Users\\plazi\\Desktop\\Programowanie\\co na obiad\\co-na-obiad-app\\src\\pages\\AddDish.js":"7","C:\\Users\\plazi\\Desktop\\Programowanie\\co na obiad\\co-na-obiad-app\\src\\components\\Ingredients.js":"8","C:\\Users\\plazi\\Desktop\\Programowanie\\co na obiad\\co-na-obiad-app\\src\\pages\\Dish.js":"9","C:\\Users\\plazi\\Desktop\\Programowanie\\co na obiad\\co-na-obiad-app\\src\\pages\\UserProducts.js":"10","C:\\Users\\plazi\\Desktop\\Programowanie\\co na obiad\\co-na-obiad-app\\src\\pages\\RemoveStorage.js":"11","C:\\Users\\plazi\\Desktop\\Programowanie\\co na obiad\\co-na-obiad-app\\src\\pages\\TypeAheadDropDown.js":"12","C:\\Users\\plazi\\Desktop\\Programowanie\\co na obiad\\co-na-obiad-app\\src\\components\\checkBanStatus.js":"13","C:\\Users\\plazi\\Desktop\\Programowanie\\co na obiad\\co-na-obiad-app\\src\\pages\\BannedDishes.js":"14"},{"size":294,"mtime":1611639849721,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":7585,"mtime":1613281355824,"results":"18","hashOfConfig":"16"},{"size":5295,"mtime":1613540535464,"results":"19","hashOfConfig":"16"},{"size":9038,"mtime":1613713322775,"results":"20","hashOfConfig":"16"},{"size":508,"mtime":1613295554201,"results":"21","hashOfConfig":"16"},{"size":5932,"mtime":1613710546991,"results":"22","hashOfConfig":"16"},{"size":453,"mtime":1613287510518,"results":"23","hashOfConfig":"16"},{"size":2510,"mtime":1613236303384,"results":"24","hashOfConfig":"16"},{"size":4477,"mtime":1613713642090,"results":"25","hashOfConfig":"16"},{"size":1368,"mtime":1613301174137,"results":"26","hashOfConfig":"16"},{"size":1322,"mtime":1612699811221,"results":"27","hashOfConfig":"16"},{"size":1332,"mtime":1612933987728,"results":"28","hashOfConfig":"16"},{"size":1578,"mtime":1613369240098,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"r9ujtu",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\plazi\\Desktop\\Programowanie\\co na obiad\\co-na-obiad-app\\src\\index.js",[],["62","63"],"C:\\Users\\plazi\\Desktop\\Programowanie\\co na obiad\\co-na-obiad-app\\src\\reportWebVitals.js",[],"C:\\Users\\plazi\\Desktop\\Programowanie\\co na obiad\\co-na-obiad-app\\src\\pages\\App.js",["64"],"import { useEffect, useState } from \"react\";\nimport \"../styles/App.css\";\nimport FilterArr from \"./FileterArr\";\nimport DrawnDishList from \"./DrawnDishList\";\nimport AddDish from \"./AddDish\";\nimport Dish from \"./Dish\";\nimport {\n  BrowserRouter as Router,\n  NavLink,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport UserProducts from \"./UserProducts\";\nimport RemoveStorage from \"./RemoveStorage\";\nimport checkBanStatus from \"../components/checkBanStatus\";\nimport BannedDishes from \"./BannedDishes\";\n\nlet mainArr = [\n  {\n    name: \"Serowa petarda\",\n    ingredient: [\n      { name: \"ser\", quantity: \"250g\" },\n      { name: \"szynka\", quantity: \"100g\" },\n      { name: \"pieczarki\", quantity: \"400g\" },\n    ],\n    description:\n      \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\",\n    steps: [{ number: \"1\", value: \"weź i pokrój petardę\" }],\n    id: 1,\n    ban: {\n      status: false,\n      howLong: \"\",\n      sinceWhen: \"\",\n    },\n  },\n  {\n    name: \"Pierogi\",\n    ingredient: [\n      { name: \"biały ser\", quantity: \"250g\" },\n      { name: \"mąka\", quantity: \"100g\" },\n      { name: \"ziemniaki\", quantity: \"400g\" },\n    ],\n    id: 3,\n    ban: {\n      status: false,\n      howLong: \"\",\n      sinceWhen: \"\",\n    },\n  },\n  {\n    name: \"Kotlet z ziemniakami\",\n    ingredient: [\n      { name: \"mieso\", quantity: \"300g\" },\n      { name: \"ziemniaki\", quantity: \"100g\" },\n      { name: \"surowka\", quantity: \"400g\" },\n    ],\n    id: 2,\n    ban: {\n      status: false,\n      howLong: \"\",\n      sinceWhen: \"\",\n    },\n  },\n];\n\nfunction App() {\n  const [allDishes, setAllDishes] = useState(\n    JSON.parse(localStorage.getItem(\"allDishes\")) || [...mainArr]\n  );\n  const [userDishes, setUserDishes] = useState(\n    JSON.parse(localStorage.getItem(\"userDishes\")) || null\n  );\n  const [matchDishes, setMatchDishes] = useState([]);\n  const [isUserProductsActive, setIsUserProductsActive] = useState(false);\n  const [selectedDish, setSelectedDish] = useState(\n    JSON.parse(localStorage.getItem(\"selectedDish\")) || \"\"\n  );\n\n  // checks if dish can be added\n  const compare = (element) => {\n    let userDishesArray = [];\n    // pobranie aktualnych filtrów użytkownika\n    const filtersArray =\n      JSON.parse(localStorage.getItem(\"userFilterArr\")) || null;\n    // jeżeli jakieś są\n    if (filtersArray) {\n      // aktywne filtry\n      const activeFilters = filtersArray.filter((item) => item.active);\n      let flag = false;\n      // element czyli danie aktualnie sprawdzane jego składniki jeden po drugim\n      element.ingredient.forEach((item) => {\n        //porównanie każdego filtra aktywnego ze składnikiem jeżeli nazwa składnika będzie zgodna z nazwą aktywnego filtra flaga na true\n        activeFilters.forEach((elem) => {\n          if (elem.name === item.name) {\n            console.log(\"przefiltrowane\");\n            flag = true;\n          }\n        });\n      });\n      // jeżeli żaden aktywny filtr nie wyklucza składnika sprawdzanego elemetnu dodajemy element do tablicy\n      // jakiś błąd is not iterable w 104 linii jak się zbanuje dwa i czeka się na ich powrót\n      if (!flag) {\n        setUserDishes((prevValue) => {\n          userDishesArray = [...prevValue, element];\n        });\n        setLocalStorage(userDishesArray, \"userDishes\");\n      }\n    } else {\n      setUserDishes((prevValue) => {\n        if (prevValue) {\n          userDishesArray = [...prevValue, element];\n        } else {\n          userDishesArray = [...allDishes, element];\n        }\n        return userDishesArray;\n      });\n      setLocalStorage(userDishesArray, \"userDishes\");\n    }\n  };\n\n  useEffect(() => {\n    const banInterval = setInterval(() => {\n      checkBanStatus(allDishes, setAllDishes, setLocalStorage, compare);\n    }, 6000);\n    return () => {\n      clearInterval(banInterval);\n    };\n  }, [allDishes]);\n\n  const updateUserDishes = (arr) => {\n    setUserDishes(arr);\n    setLocalStorage(arr, \"userDishes\");\n  };\n  const banDish = (id, time, howLong) => {\n    const dishes = [...allDishes];\n    const dishIndex = dishes.findIndex((elem) => elem.id === id);\n    const dish = dishes[dishIndex];\n    dish.ban = {\n      status: true,\n      sinceWhen: time,\n      howLong,\n    };\n    setAllDishes(dishes);\n    setLocalStorage(dishes, \"allDishes\");\n\n    if (userDishes) {\n      let arr = [...userDishes];\n      const userDishIndex = arr.findIndex((element) => element.id === id);\n      if (userDishIndex !== -1) {\n        arr.splice(userDishIndex, 1);\n        setUserDishes(arr);\n        setLocalStorage(arr, \"userDishes\");\n      }\n    } else {\n      const arrWithActive = dishes.filter((element) => !element.ban.status);\n      setUserDishes(arrWithActive);\n      setLocalStorage(arrWithActive, \"userDishes\");\n    }\n  };\n  const UserProductsSection = (\n    <UserProducts\n      setSelectedDish={setSelectedDish}\n      userDishes={userDishes}\n      allDishes={allDishes}\n      setMatchDishes={setMatchDishes}\n      setIsUserProductsActive={setIsUserProductsActive}\n    />\n  );\n\n  const fileterSection = (\n    <FilterArr\n      setSelectedDish={setSelectedDish}\n      userDishes={userDishes}\n      allDishes={allDishes}\n      updateUserDishes={updateUserDishes}\n      isUserProductsActive={isUserProductsActive}\n    />\n  );\n\n  const updateAllDishes = (dish) => {\n    const allDishesArr = [...allDishes];\n    allDishesArr.push(dish);\n    setAllDishes(allDishesArr);\n    setLocalStorage(allDishesArr, \"allDishes\");\n    compare(dish);\n  };\n  const setLocalStorage = (arr, name) => {\n    localStorage.setItem(name, JSON.stringify(arr));\n  };\n\n  const getDishesArray = () => {\n    if (isUserProductsActive) {\n      return matchDishes;\n    }\n    if (userDishes) {\n      return userDishes;\n    } else {\n      return allDishes;\n    }\n  };\n\n  const dishesCounter = (\n    <p>\n      Liczba dań <span>{getDishesArray().length}</span>\n    </p>\n  );\n  const mainPageStructure = (\n    <>\n      <div className=\"upperNav\">\n        <div className=\"upperNav__userProducts\">{UserProductsSection}</div>\n        <div className=\"upperNav__counter\">{dishesCounter}</div>\n        <div className=\"upperNav__filters\">{fileterSection}</div>\n      </div>\n      <div>\n        <DrawnDishList\n          selectedDish={selectedDish}\n          setSelectedDish={setSelectedDish}\n          customedArr={getDishesArray()}\n          banDish={banDish}\n          setIsUserProductsActive={setIsUserProductsActive}\n        />\n      </div>\n\n      <div className=\"lowerNav\">\n        <NavLink to=\"/bannedDishes\" className=\"lowerNav__banned\">\n          Baned\n        </NavLink>\n        <NavLink to=\"/addDish\" className=\"lowerNav__add\">\n          Dodaj\n        </NavLink>\n        <RemoveStorage />\n      </div>\n    </>\n  );\n\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact>\n          {mainPageStructure}\n        </Route>\n        <Route path=\"/bannedDishes\">\n          <BannedDishes\n            allDishes={allDishes}\n            setAllDishes={setAllDishes}\n            setLocalStorage={setLocalStorage}\n            compare={compare}\n          />\n        </Route>\n        <Route path=\"/addDish\">\n          <AddDish updateAllDishes={updateAllDishes} />\n        </Route>\n        <Route path=\"/dish/:id\">\n          <Dish selectedDish={selectedDish} />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\plazi\\Desktop\\Programowanie\\co na obiad\\co-na-obiad-app\\src\\pages\\DrawnDishList.js",[],"C:\\Users\\plazi\\Desktop\\Programowanie\\co na obiad\\co-na-obiad-app\\src\\pages\\FileterArr.js",[],"C:\\Users\\plazi\\Desktop\\Programowanie\\co na obiad\\co-na-obiad-app\\src\\components\\Filter.js",[],"C:\\Users\\plazi\\Desktop\\Programowanie\\co na obiad\\co-na-obiad-app\\src\\pages\\AddDish.js",["65"],"import React, { createRef, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../styles/AddDish.css\";\r\nimport { v4 } from \"uuid\";\r\n\r\nconst validation = (dish) => {\r\n  if (dish.name.trim().length < 2) {\r\n    return \"Nazwa jest obowiązkowa\";\r\n  }\r\n  return null;\r\n};\r\n\r\nconst AddDish = (props) => {\r\n  const nameDishInput = createRef();\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n  const [dish, setDish] = useState({\r\n    name: \"\",\r\n    ingredient: [{ name: \"\", quantity: \"\" }],\r\n    description: \"\",\r\n    steps: [{ number: \"\", value: \"\" }],\r\n    id: 1,\r\n    ban: {\r\n      status: false,\r\n      howLong: \"\",\r\n      sinceWhen: \"\",\r\n    },\r\n  });\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    let dishObj = { ...dish };\r\n    dishObj[name] = value;\r\n    setDish(dishObj);\r\n  };\r\n\r\n  const changeIngredientInputs = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const element = { ...dish };\r\n    element.ingredient[index][name] = value;\r\n    setDish(element);\r\n  };\r\n  const addNewIngredientInputs = (e) => {\r\n    const element = { ...dish };\r\n    const arr = [...element.ingredient, { name: \"\", quantity: \"\" }];\r\n    element.ingredient = arr;\r\n    setDish(element);\r\n  };\r\n  const removeIngredient = (index) => {\r\n    const dishObj = { ...dish };\r\n    const ingredientArr = dishObj.ingredient;\r\n    ingredientArr.splice(index, 1);\r\n    setDish(dishObj);\r\n  };\r\n  const changeStepInput = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const dishObj = { ...dish };\r\n    dishObj.steps[index].number = index + 1;\r\n\r\n    dishObj.steps[index][name] = value;\r\n    setDish(dishObj);\r\n  };\r\n  const addStepsInput = () => {\r\n    const dishObj = { ...dish };\r\n    const stepsArr = [...dishObj.steps, { number: \"\", value: \"\" }];\r\n    dishObj.steps = stepsArr;\r\n    setDish(dishObj);\r\n  };\r\n  const removeStep = (index) => {\r\n    const dishObj = { ...dish };\r\n    const stepsArr = [...dishObj.steps];\r\n    stepsArr.splice(index, 1);\r\n    dishObj.steps = stepsArr;\r\n    setDish(dishObj);\r\n  };\r\n  const saveDish = (e) => {\r\n    e.preventDefault();\r\n    const message = validation(dish);\r\n    if (message) {\r\n      setErrorMsg(message);\r\n      nameDishInput.current.focus();\r\n      return;\r\n    } else {\r\n      setErrorMsg(\"\");\r\n    }\r\n    props.updateAllDishes(dish);\r\n    setDish({\r\n      name: \"\",\r\n      ingredient: [{ name: \"\", quantity: \"\" }],\r\n      description: \"\",\r\n      steps: [{ number: \"\", value: \"\" }],\r\n      id: 1,\r\n      ban: {\r\n        status: false,\r\n        howLong: \"\",\r\n        sinceWhen: \"\",\r\n      },\r\n    });\r\n  };\r\n  let stepsInputs = dish.steps.map((x, i) => {\r\n    return (\r\n      <div className=\"addDishForm__stepsBox\" key={i}>\r\n        <span className=\"addDishForm__txt\">{i + 1}.</span>\r\n        <input\r\n          className=\"addDishForm__stepInput\"\r\n          type=\"text\"\r\n          placeholder=\"opisz krok\"\r\n          onChange={(e) => changeStepInput(e, i)}\r\n          value={x.value}\r\n          name=\"value\"\r\n        />\r\n        <div className=\"addDishForm__stepsBtns\">\r\n          {dish.steps.length - 1 === i && (\r\n            <button onClick={addStepsInput} className=\"addDishForm__stepsBtn\">\r\n              dodaj krok\r\n            </button>\r\n          )}\r\n          {dish.steps.length !== 1 && (\r\n            <button\r\n              onClick={() => removeStep(i)}\r\n              className=\"addDishForm__stepsBtn\"\r\n            >\r\n              Usuń\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  let ingredientImputs = dish.ingredient.map((x, i) => {\r\n    return (\r\n      <div className=\"addDishForm__ingredientsBox\" key={`${x}${i}`}>\r\n        <input\r\n          className=\"addDishForm__ingredientsInput\"\r\n          type=\"text\"\r\n          placeholder=\"składnik\"\r\n          onChange={(e) => changeIngredientInputs(e, i)}\r\n          name=\"name\"\r\n          value={x.name}\r\n        />\r\n        <input\r\n          className=\"addDishForm__ingredientsInput\"\r\n          type=\"text\"\r\n          placeholder=\"ilość\"\r\n          onChange={(e) => changeIngredientInputs(e, i)}\r\n          name=\"quantity\"\r\n          value={x.quantity}\r\n        />\r\n        <div className=\"addDishForm__ingredientsBtns\">\r\n          {dish.ingredient.length !== 1 && (\r\n            <button\r\n              onClick={() => removeIngredient(i)}\r\n              className=\"addDishForm__ingredientsBtn\"\r\n            >\r\n              Usuń\r\n            </button>\r\n          )}\r\n          {dish.ingredient.length - 1 === i && (\r\n            <button\r\n              onClick={addNewIngredientInputs}\r\n              className=\"addDishForm__ingredientsBtn\"\r\n            >\r\n              Dodaj\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n  return (\r\n    <>\r\n      <div className=\"addDish\">\r\n        <Link className=\"backBtn\" to=\"/\">\r\n          Wróć\r\n        </Link>\r\n        <form action=\"\" className=\"addDishForm\" onSubmit={saveDish}>\r\n          <input\r\n            className=\"addDishForm__txtInput\"\r\n            ref={nameDishInput}\r\n            type=\"text\"\r\n            placeholder=\"Nazwa\"\r\n            onChange={handleInputChange}\r\n            value={dish.name}\r\n            name=\"name\"\r\n          />\r\n          {errorMsg && <p>{errorMsg}</p>}\r\n          <textarea\r\n            className=\"addDishForm__txtArea\"\r\n            type=\"text\"\r\n            placeholder=\"Opis\"\r\n            onChange={handleInputChange}\r\n            value={dish.description}\r\n            name=\"description\"\r\n          />\r\n          <p className=\"addDishForm__txt\">Podaj składniki</p>\r\n          {ingredientImputs}\r\n          <p className=\"addDishForm__txt\">Opisz sposób przyrządzenia</p>\r\n          {stepsInputs}\r\n          <button className=\"addDishForm__submitBtn\" onSubmit={saveDish}>\r\n            Zapisz przepis\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default AddDish;\r\n","C:\\Users\\plazi\\Desktop\\Programowanie\\co na obiad\\co-na-obiad-app\\src\\components\\Ingredients.js",[],"C:\\Users\\plazi\\Desktop\\Programowanie\\co na obiad\\co-na-obiad-app\\src\\pages\\Dish.js",["66"],"import { v4 } from \"uuid\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../styles/Dish.css\";\r\nconst Dish = (props) => {\r\n  const [products, setProducts] = useState([]);\r\n  const {\r\n    name,\r\n    description = null,\r\n    ingredient = [],\r\n    steps = [],\r\n  } = props.selectedDish;\r\n\r\n  const productsList = ingredient.map((item) => ({\r\n    name: item.name,\r\n    quantity: item.quantity,\r\n    isChecked: false,\r\n  }));\r\n  useEffect(() => {\r\n    const arr = JSON.parse(localStorage.getItem(\"productsList\"));\r\n    if (arr) {\r\n      setProducts(arr);\r\n    } else setProducts(productsList);\r\n  }, []);\r\n  const ingredientArr = ingredient.map((item) => (\r\n    <li className=\"selectedDish__ingredient\" key={v4()}>\r\n      {item.name}: <span>{item.quantity}</span>\r\n    </li>\r\n  ));\r\n\r\n  const stepsList =\r\n    steps.length > 0\r\n      ? steps.map((item) => (\r\n          <li className=\"selectedDish__step\" key={v4()}>\r\n            {item.number}: {item.value}\r\n          </li>\r\n        ))\r\n      : null;\r\n  const handleCheck = (e) => {\r\n    const arr = [...products];\r\n    const index = arr.findIndex((item) => item.name === e.target.id);\r\n    arr[index].isChecked = !arr[index].isChecked;\r\n    setProducts(arr);\r\n  };\r\n  const shoppingList = products.map((item) => (\r\n    <label htmlFor={item.name} key={v4()}>\r\n      {item.name}\r\n      <input\r\n        type=\"checkbox\"\r\n        id={item.name}\r\n        checked={item.isChecked}\r\n        onChange={handleCheck}\r\n      />\r\n      <span className=\"checkmark\"></span>\r\n    </label>\r\n  ));\r\n  const handleSaveProducts = (e) => {\r\n    e.preventDefault();\r\n    localStorage.setItem(\"productsList\", JSON.stringify(products));\r\n    // zapisz do local storage cały obiekt\r\n  };\r\n  return (\r\n    <div className=\"selectedDish\">\r\n      <Link to=\"/\">Wróć</Link>\r\n      <h1 className=\"selectedDish__name\">{name}</h1>\r\n      <p className=\"selectedDish__description\">{description}</p>\r\n      <div className=\"selectedDish__products\">\r\n        <h2>składniki</h2>\r\n        <ul className=\"selectedDish__ingredients\">{ingredientArr}</ul>\r\n        <h2>Lista zakupów</h2>\r\n        <p>Zaznacz co musisz jeszcze kupić:</p>\r\n        <form action=\"\" onSubmit={(e) => handleSaveProducts(e)}>\r\n          {shoppingList}\r\n          <button>Zapisz</button>\r\n        </form>\r\n      </div>\r\n      <div className=\"selectedDish__steps\">\r\n        <h2>Przepis</h2>\r\n        {stepsList}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Dish;\r\n","C:\\Users\\plazi\\Desktop\\Programowanie\\co na obiad\\co-na-obiad-app\\src\\pages\\UserProducts.js",[],"C:\\Users\\plazi\\Desktop\\Programowanie\\co na obiad\\co-na-obiad-app\\src\\pages\\RemoveStorage.js",[],"C:\\Users\\plazi\\Desktop\\Programowanie\\co na obiad\\co-na-obiad-app\\src\\pages\\TypeAheadDropDown.js",[],"C:\\Users\\plazi\\Desktop\\Programowanie\\co na obiad\\co-na-obiad-app\\src\\components\\checkBanStatus.js",[],"C:\\Users\\plazi\\Desktop\\Programowanie\\co na obiad\\co-na-obiad-app\\src\\pages\\BannedDishes.js",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":128,"column":6,"nodeType":"73","endLine":128,"endColumn":17,"suggestions":"74"},{"ruleId":"75","severity":1,"message":"76","line":4,"column":10,"nodeType":"77","messageId":"78","endLine":4,"endColumn":12},{"ruleId":"71","severity":1,"message":"79","line":24,"column":6,"nodeType":"73","endLine":24,"endColumn":8,"suggestions":"80"},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'compare'. Either include it or remove the dependency array.","ArrayExpression",["83"],"no-unused-vars","'v4' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'productsList'. Either include it or remove the dependency array.",["84"],"no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},{"desc":"87","fix":"88"},"Update the dependencies array to be: [allDishes, compare]",{"range":"89","text":"90"},"Update the dependencies array to be: [productsList]",{"range":"91","text":"92"},[4063,4074],"[allDishes, compare]",[652,654],"[productsList]"]