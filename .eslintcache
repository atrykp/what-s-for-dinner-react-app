[{"C:\\Users\\plazi\\Desktop\\Programowanie\\co na obiad\\co-na-obiad-app\\src\\index.js":"1","C:\\Users\\plazi\\Desktop\\Programowanie\\co na obiad\\co-na-obiad-app\\src\\reportWebVitals.js":"2","C:\\Users\\plazi\\Desktop\\Programowanie\\co na obiad\\co-na-obiad-app\\src\\pages\\App.js":"3","C:\\Users\\plazi\\Desktop\\Programowanie\\co na obiad\\co-na-obiad-app\\src\\pages\\DrawnDishList.js":"4","C:\\Users\\plazi\\Desktop\\Programowanie\\co na obiad\\co-na-obiad-app\\src\\pages\\FileterArr.js":"5","C:\\Users\\plazi\\Desktop\\Programowanie\\co na obiad\\co-na-obiad-app\\src\\components\\Filter.js":"6","C:\\Users\\plazi\\Desktop\\Programowanie\\co na obiad\\co-na-obiad-app\\src\\pages\\AddDish.js":"7","C:\\Users\\plazi\\Desktop\\Programowanie\\co na obiad\\co-na-obiad-app\\src\\components\\Ingredients.js":"8","C:\\Users\\plazi\\Desktop\\Programowanie\\co na obiad\\co-na-obiad-app\\src\\pages\\Dish.js":"9","C:\\Users\\plazi\\Desktop\\Programowanie\\co na obiad\\co-na-obiad-app\\src\\pages\\UserProducts.js":"10"},{"size":294,"mtime":1611639849721,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":6687,"mtime":1612366380003,"results":"14","hashOfConfig":"12"},{"size":2557,"mtime":1612414437847,"results":"15","hashOfConfig":"12"},{"size":7957,"mtime":1612331012204,"results":"16","hashOfConfig":"12"},{"size":434,"mtime":1611383664413,"results":"17","hashOfConfig":"12"},{"size":4780,"mtime":1611809878354,"results":"18","hashOfConfig":"12"},{"size":349,"mtime":1611984158569,"results":"19","hashOfConfig":"12"},{"size":1316,"mtime":1612413496832,"results":"20","hashOfConfig":"12"},{"size":3843,"mtime":1612413152932,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"r9ujtu",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":1,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},"C:\\Users\\plazi\\Desktop\\Programowanie\\co na obiad\\co-na-obiad-app\\src\\index.js",[],["45","46"],"C:\\Users\\plazi\\Desktop\\Programowanie\\co na obiad\\co-na-obiad-app\\src\\reportWebVitals.js",[],"C:\\Users\\plazi\\Desktop\\Programowanie\\co na obiad\\co-na-obiad-app\\src\\pages\\App.js",["47","48"],"import { useEffect, useState } from \"react\";\nimport \"../styles/App.css\";\nimport FilterArr from \"./FileterArr\";\nimport DrawnDishList from \"./DrawnDishList\";\nimport AddDish from \"./AddDish\";\nimport Dish from \"./Dish\";\nimport {\n  BrowserRouter as Router,\n  NavLink,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport UserProducts from \"./UserProducts\";\nlet mainArr = [\n  {\n    name: \"Serowa petarda\",\n    ingredient: [\n      { name: \"ser\", quantity: \"250g\" },\n      { name: \"szynka\", quantity: \"100g\" },\n      { name: \"pieczarki\", quantity: \"400g\" },\n    ],\n    description:\n      \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\",\n    steps: [{ number: \"1\", value: \"weź i pokrój petardę\" }],\n    id: 1,\n    ban: {\n      status: false,\n      howLong: \"\",\n      sinceWhen: \"\",\n    },\n  },\n  {\n    name: \"Pierogi\",\n    ingredient: [\n      { name: \"biały ser\", quantity: \"250g\" },\n      { name: \"mąka\", quantity: \"100g\" },\n      { name: \"ziemniaki\", quantity: \"400g\" },\n    ],\n    id: 3,\n    ban: {\n      status: false,\n      howLong: \"\",\n      sinceWhen: \"\",\n    },\n  },\n  {\n    name: \"Kotlet z ziemniakami\",\n    ingredient: [\n      { name: \"mieso\", quantity: \"300g\" },\n      { name: \"ziemniaki\", quantity: \"100g\" },\n      { name: \"surowka\", quantity: \"400g\" },\n    ],\n    id: 2,\n    ban: {\n      status: false,\n      howLong: \"\",\n      sinceWhen: \"\",\n    },\n  },\n];\nfunction App() {\n  const reset = () => {\n    localStorage.removeItem(\"userDishes\");\n    localStorage.removeItem(\"allDishes\");\n  };\n\n  const [allDishes, setAllDishes] = useState(\n    JSON.parse(localStorage.getItem(\"allDishes\")) || [...mainArr]\n  );\n  const [userDishes, setUserDishes] = useState(\n    JSON.parse(localStorage.getItem(\"userDishes\")) || null\n  );\n  const [matchDishes, setMatchDishes] = useState([]);\n  const [isUserProductsActive, setIsUserProductsActive] = useState(false);\n  const [selectedDish, setSelectedDish] = useState(\"\");\n\n  const checkBanStatus = () => {\n    console.log(\"sprawdzam\");\n\n    const dishes = [...allDishes];\n    const banDishes = dishes.filter(\n      (element) => element.ban.status && element.ban.howLong !== \"permament\"\n    );\n    if (banDishes.length !== 0) {\n      let date = new Date().getTime();\n\n      banDishes.forEach((element) => {\n        if (date - (element.ban.howLong + element.ban.sinceWhen) > 0) {\n          element.ban.status = false;\n          element.ban.sinceWhen = \"\";\n          element.ban.howLong = \"\";\n\n          const index = dishes.findIndex((elem) => elem.id === element.id);\n          dishes[index] = element;\n          setAllDishes(dishes);\n          setAllDishesStorage(dishes);\n          let userDishesArray = [];\n          const filtersArray =\n            JSON.parse(localStorage.getItem(\"userFilterArr\")) || null;\n          if (filtersArray) {\n            const activeFilters = filtersArray.filter((item) => item.active);\n            let flag = false;\n            let showMe = element.ingredient.forEach((item) => {\n              activeFilters.forEach((elem) => {\n                if (elem.name === item.name) {\n                  console.log(\"przefiltrowane\");\n                  flag = true;\n                }\n              });\n            });\n            if (!flag) {\n              setUserDishes((prevValue) => {\n                userDishesArray = [...prevValue, element];\n                return userDishesArray;\n              });\n              setUserStorage(userDishesArray);\n            }\n          } else {\n            setUserDishes((prevValue) => {\n              userDishesArray = [...prevValue, element];\n              return userDishesArray;\n            });\n            setUserStorage(userDishesArray);\n          }\n        }\n      });\n    }\n  };\n\n  useEffect(() => {\n    window.setInterval(checkBanStatus, 6000);\n  }, []);\n\n  const updateUserDishes = (arr) => {\n    setUserDishes(arr);\n    setUserStorage(arr);\n  };\n  const banDish = (id, time, howLong) => {\n    const dishes = userDishes ? [...userDishes] : [...allDishes];\n    const dishIndex = dishes.findIndex((elem) => elem.id === id);\n    const dish = dishes[dishIndex];\n    dish.ban = {\n      status: true,\n      sinceWhen: time,\n      howLong,\n    };\n    setUserDishes(dishes.filter((element) => !element.ban.status));\n    setUserStorage(dishes.filter((element) => !element.ban.status));\n    setAllDishesStorage(dishes);\n  };\n  const UserProductsSection = (\n    <UserProducts\n      setSelectedDish={setSelectedDish}\n      userDishes={userDishes}\n      allDishes={allDishes}\n      setMatchDishes={setMatchDishes}\n      setIsUserProductsActive={setIsUserProductsActive}\n    />\n  );\n\n  const fileterSection = (\n    <FilterArr\n      setSelectedDish={setSelectedDish}\n      userDishes={userDishes}\n      allDishes={allDishes}\n      updateUserDishes={updateUserDishes}\n    />\n  );\n\n  const updateAllDishes = (dish) => {\n    const allDishesArr = [...allDishes];\n    allDishesArr.push(dish);\n    setAllDishes(allDishesArr);\n    setAllDishesStorage(allDishesArr);\n  };\n  const setUserStorage = (arr) => {\n    console.log(arr);\n\n    localStorage.setItem(\"userDishes\", JSON.stringify(arr));\n  };\n  const setAllDishesStorage = (arr) => {\n    localStorage.setItem(\"allDishes\", JSON.stringify(arr));\n  };\n  console.log(selectedDish);\n  const getDishesArray = () => {\n    if (isUserProductsActive) {\n      return matchDishes;\n    }\n    if (userDishes) {\n      return userDishes;\n    } else {\n      return allDishes;\n    }\n  };\n\n  const dishesCounter = (\n    <p>Liczba potraw do wylosowania ({getDishesArray().length})</p>\n  );\n\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact>\n          <NavLink to=\"/addDish\">Dodaj swój przepis</NavLink>\n          <button onClick={reset}>usuń pamięć</button>\n          <p>co masz w lodówce</p>\n          {UserProductsSection}\n\n          <p>powiedz nam czego Ci nie pokazywać</p>\n          {fileterSection}\n          {dishesCounter}\n\n          <h1>wylosowana potrawa to:</h1>\n          <DrawnDishList\n            selectedDish={selectedDish}\n            setSelectedDish={setSelectedDish}\n            customedArr={getDishesArray()}\n            banDish={banDish}\n          />\n        </Route>\n        <Route path=\"/addDish\">\n          <AddDish updateAllDishes={updateAllDishes} />\n        </Route>\n        <Route path=\"/dish/:id\">\n          <Dish selectedDish={selectedDish} />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\plazi\\Desktop\\Programowanie\\co na obiad\\co-na-obiad-app\\src\\pages\\DrawnDishList.js",["49","50","51"],"C:\\Users\\plazi\\Desktop\\Programowanie\\co na obiad\\co-na-obiad-app\\src\\pages\\FileterArr.js",[],"C:\\Users\\plazi\\Desktop\\Programowanie\\co na obiad\\co-na-obiad-app\\src\\components\\Filter.js",[],"C:\\Users\\plazi\\Desktop\\Programowanie\\co na obiad\\co-na-obiad-app\\src\\pages\\AddDish.js",[],"C:\\Users\\plazi\\Desktop\\Programowanie\\co na obiad\\co-na-obiad-app\\src\\components\\Ingredients.js",[],"C:\\Users\\plazi\\Desktop\\Programowanie\\co na obiad\\co-na-obiad-app\\src\\pages\\Dish.js",[],"C:\\Users\\plazi\\Desktop\\Programowanie\\co na obiad\\co-na-obiad-app\\src\\pages\\UserProducts.js",["52"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"../styles/App.css\";\r\n\r\nconst UserProducts = ({\r\n  allDishes,\r\n  setMatchDishes,\r\n  setIsUserProductsActive,\r\n  setSelectedDish,\r\n}) => {\r\n  const [dishesList, setDishesList] = useState([]);\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [productsFilters, setProductsFilters] = useState([]);\r\n  const [activeFilters, setActiveFilters] = useState([]);\r\n\r\n  const showSection = () => {\r\n    setIsActive((prevValue) => {\r\n      if (prevValue) {\r\n        setDishesList([]);\r\n        setMatchDishes([]);\r\n      } else setSelectedDish(\"\");\r\n\r\n      setIsUserProductsActive(!prevValue);\r\n      return !prevValue;\r\n    });\r\n    allFilters();\r\n  };\r\n  const removeDuplicates = (arr) => {\r\n    let dataArr = arr.map((item) => {\r\n      return [item.name, item];\r\n    }); // creates array of array\r\n    let maparr = new Map(dataArr); // create key value pair from array of array\r\n    let result = [...maparr.values()];\r\n    return result; //converting back to array from mapobject\r\n  };\r\n  const allFilters = () => {\r\n    const dishes = [...allDishes];\r\n    const dishesFiltersArr = dishes\r\n      .map((dish) =>\r\n        dish.ingredient.map((elem) => ({\r\n          name: elem.name,\r\n          active: false,\r\n          id: Math.floor(Math.random() * 123),\r\n        }))\r\n      )\r\n      .flat();\r\n    const singleFiltersArr = removeDuplicates(dishesFiltersArr);\r\n    setProductsFilters(singleFiltersArr);\r\n  };\r\n  const getActiveFilters = (arr) => {\r\n    const activeFilters = arr.filter((element) => element.active);\r\n    return activeFilters;\r\n  };\r\n  const changeActiveStatus = (id) => {\r\n    const filtersArr = [...productsFilters];\r\n    const index = filtersArr.findIndex((filter) => filter.id === id);\r\n\r\n    filtersArr[index].active = !filtersArr[index].active;\r\n    filterDishes(filtersArr[index]);\r\n    setActiveFilters(getActiveFilters(filtersArr));\r\n    setProductsFilters(filtersArr);\r\n  };\r\n  const getMatchedDishes = (arr, name) => {\r\n    const matchArr = [];\r\n    arr.forEach((dish) => {\r\n      let isMatch = false;\r\n      for (let i = 0; i < dish.ingredient.length; i++) {\r\n        if (dish.ingredient[i].name === name) isMatch = true;\r\n      }\r\n      if (isMatch) matchArr.push(dish);\r\n    });\r\n    return matchArr;\r\n  };\r\n  const filterDishes = (filterObj) => {\r\n    const { active, name } = filterObj;\r\n    let selectedDishesArr = [];\r\n    if (active) {\r\n      const dishesArr =\r\n        dishesList.length > 0 ? [...dishesList] : [...allDishes];\r\n      selectedDishesArr = getMatchedDishes(dishesArr, name);\r\n    } else {\r\n      let allDishesArr = [...allDishes];\r\n      const currentFilters = activeFilters;\r\n\r\n      const index = currentFilters.findIndex((item) => item.name === name);\r\n      currentFilters.splice(index, 1);\r\n      if (currentFilters.length === 0) {\r\n        selectedDishesArr = [];\r\n      } else {\r\n        currentFilters.forEach((element) => {\r\n          allDishesArr = getMatchedDishes(allDishesArr, element.name);\r\n        });\r\n\r\n        selectedDishesArr = allDishesArr;\r\n      }\r\n    }\r\n    setDishesList(selectedDishesArr);\r\n    setMatchDishes(selectedDishesArr);\r\n  };\r\n  const filters = productsFilters.map((item) => (\r\n    <li>\r\n      <button\r\n        className={item.active ? \"activeFilter\" : \"\"}\r\n        onClick={() => changeActiveStatus(item.id)}\r\n      >\r\n        {item.name}\r\n      </button>\r\n    </li>\r\n  ));\r\n  const section = isActive && (\r\n    <div>\r\n      <p>Zaznacz poniżej, które produkty już masz</p>\r\n      <ul>{filters}</ul>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <p>czy chesz filtrować po produktach które masz?</p>\r\n\r\n      <button onClick={showSection}>{isActive ? \"wyłącz\" : \"włącz\"}</button>\r\n\r\n      {section}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserProducts;\r\n",{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":103,"column":17,"nodeType":"59","messageId":"60","endLine":103,"endColumn":23},{"ruleId":"61","severity":1,"message":"62","line":132,"column":6,"nodeType":"63","endLine":132,"endColumn":8,"suggestions":"64"},{"ruleId":"57","severity":1,"message":"65","line":13,"column":10,"nodeType":"59","messageId":"60","endLine":13,"endColumn":20},{"ruleId":"57","severity":1,"message":"66","line":69,"column":9,"nodeType":"59","messageId":"60","endLine":69,"endColumn":25},{"ruleId":"67","severity":2,"message":"68","line":77,"column":12,"nodeType":"69","endLine":77,"endColumn":16},{"ruleId":"57","severity":1,"message":"70","line":2,"column":10,"nodeType":"59","messageId":"60","endLine":2,"endColumn":14},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'showMe' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkBanStatus'. Either include it or remove the dependency array.","ArrayExpression",["73"],"'isSelected' is assigned a value but never used.","'selectedDishView' is assigned a value but never used.","react/jsx-no-undef","'Dish' is not defined.","JSXIdentifier","'Link' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"74","fix":"75"},"Update the dependencies array to be: [checkBanStatus]",{"range":"76","text":"77"},[4046,4048],"[checkBanStatus]"]